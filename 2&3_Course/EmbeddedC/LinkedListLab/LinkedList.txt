#include <stdio.h>
#include <string.h>
#include <stdlib.h>

typedef enum {
    ENGLISH,
    FRENCH,
    SPANISH,
    GERMAN,
    ITALIAN,
    CHINESE,
    PORTUGESE
} lang;
 
struct node {
   char *title;
   double price;
   int pagesNumber;
   lang language;
   double weight;
   int pubYear;
   struct node *next;
};

struct node *head = NULL;

const char* langToStr(lang language);
void printList();
void insertInList (char *title, double price, int pagesNumber, lang language, double weight, int pubYear);
void clearList();

void main() {
  insertInList ("Harry Potter and the Sorcerer's Stone", 30.54, 127, ENGLISH, 0.471, 1997);
  insertInList ("Harry Potter and the Chamber of Secrets", 21.34, 54, FRENCH, 1.42, 1998);
  insertInList ("Harry Potter and the Prisoner of Azkaban", 36.75, 65, SPANISH, 1.3, 1999);
  insertInList ("Harry Potter and the Goblet of Fire", 74.76, 185, GERMAN, 0.43, 2000);
  insertInList ("Harry Potter and the Order of the Phoenix", 55.86, 172, ITALIAN, 1.53, 2003);
  insertInList ("Harry Potter and the Half-Blood Prince", 61.37, 265, CHINESE, 2, 2005);
  insertInList ("Harry Potter and the Deathly Hallows", 74.97, 93, PORTUGESE, 0.917, 2007);
  printf ("\"Harry Potter\" series:\n");
  printList ();
  clearList ();
}

const char* langToStr(lang language) {
    switch(language) {
        case ENGLISH: return "English";
        case FRENCH: return "French";
        case SPANISH: return "Spanish";
        case GERMAN: return "German";
        case ITALIAN: return "French";
        case CHINESE: return "Chinese";
        case PORTUGESE: return "Portugese";
        default: return "";
    }
}
 
void printList() {
  struct node *p = head;
  while (p != NULL) {
      printf("\nBook title: %s\nPrice: %.2lf\nNumber of pages: %u\nLanguage: %s\nWeight: %.3lf\nYear of publishing: %u\n",
	    p->title, p->price, p->pagesNumber, langToStr(p->language), p->weight, p->pubYear);
      p = p->next;
  }
}

void insertInList (char *title, double price, int pagesNumber, lang language, double weight, int pubYear) {
  struct node *current = (struct node *) malloc (sizeof (struct node));
  current->title = title;
  current->price = price;
  current->pagesNumber = pagesNumber;
  current->language = language;
  current->weight = weight;
  current->pubYear = pubYear;
  if (head == NULL) {
      current->next = head;
      head = current;
  }
  else {
    struct node *pointed = head;
      while (pointed->next != NULL) {
	    pointed = pointed->next;
    }
    pointed->next = current;
  }
}

void clearList() {
  while (head != NULL) {
      head = head->next;
  }
}